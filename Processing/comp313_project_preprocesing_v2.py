# -*- coding: utf-8 -*-
"""COMP313_PROJECT_PREPROCESING_V2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13vHGewi0KgFLL6yn9xy7ZlfIR6y2z7Yw
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Column names based on your dataset description
columns = [
    'ID', 'Age', 'Gender', 'Education', 'Country', 'Ethnicity',
    'Nscore', 'Escore', 'Oscore', 'Ascore', 'Cscore',
    'Impulsive', 'SS',
    'Alcohol', 'Amphet', 'Amyl', 'Benzos', 'Caff', 'Cannabis', 'Choc',
    'Coke', 'Crack', 'Ecstasy', 'Heroin', 'Ketamine', 'Legalh', 'LSD',
    'Meth', 'Mushrooms', 'Nicotine', 'Semer', 'VSA'
]

# Load the dataset
file_path = '/content/drug_consumption.data'  # Adjust path if necessary
data = pd.read_csv(file_path, header=None, names=columns)

# Display the first few rows of the dataset
print(data.head())
print('rows', data.shape[0])
print('colums', data.shape[0])

#Check for missing values
data.isna().sum().sum()

"""data.query("Semer != 'CL0'") -> Is necessary if I interested in identifying overclaimers in my dataset, based on their responses to the fictitious drug "Semer". The dataset includes a fictitious drug named "Semer" to identify participants who might be overclaiming or misreporting their drug use.
Respondents who report any level of use of "Semer" (anything other than 'CL0', which stands for "Never Used") can be considered as potential overclaimers or providing unreliable data.
By filtering out these respondents, you can clean your dataset, making it more reliable for analysis.
"""

#Those who are overclaimers of drug use
data.query("Semer != 'CL0'")

# Drop overclaimers
data = data.drop(data[data['Semer'] != 'CL0'].index)

# Drop specific columns
data = data.drop(['Semer', 'Caff', 'Choc'], axis=1)

# Reset the index
data = data.reset_index(drop=True)

# Print new dimensions of the dataframe
print(f'In the new dataframe there are {data.shape[0]} rows and {data.shape[1]} columns')

"""Feature encoding"""

data['Age'].unique()

# Mapping for Age
age_mapping = {-0.95197: 0, # '18-24'
               -0.07854: 1, # '25-34'
                0.49788: 2, # '35-44'
                1.09449: 3, # '45-54'
                1.82213: 4, # '56-64'
                2.59171: 5  # '65+'
}

data['Age'] = data['Age'].map(age_mapping)

gender_mapping = {-0.48246: 0, # 'male'
                   0.48246: 1 # 'female'
}

data['Gender'] = data['Gender'].map(gender_mapping)

# Mapping for Education
education_mapping = {-2.43591: 0, # 'Left school before 16 years'
                     -1.73790: 1, # 'Left school at 16 years'
                     -1.43719: 2, # 'Left school at 17 years'
                     -1.22751: 3, # 'Left school at 18 years'
                     -0.61113: 4, # 'Some college or university, no certificate or degree'
                     -0.05921: 5, # 'Professional certificate/ diploma'
                      0.45468: 6, # 'University degree'
                      1.16365: 7, # 'Masters degree'
                      1.98437: 8  #'Doctorate degree'
}
data['Education'] = data['Education'].map(education_mapping)

# Mapping for countries
country_mapping = {
    -0.09765: 0, # 'Australia',
     0.24923: 1, # 'Canada',
    -0.46841: 2, # 'New Zealand',
    -0.28519: 3, # 'Other',
     0.21128: 4, # 'Republic of Ireland',
     0.96082: 5, # 'UK',
    -0.57009: 6  # 'USA'
}
data['Country'] = data['Country'].map(country_mapping)

# Mapping for Ethnicity
ethnicity_mapping = {
    -0.50212: 0, # 'Asian'
    -1.10702: 1, # 'Black'
     1.90725: 2, # 'Mixed-Black/Asian'
     0.12600: 3, # 'Mixed-White/Asian'
    -0.22166: 4, # 'Mixed-White/Black'
     0.11440: 5, # 'Other'
    -0.31685: 6  # 'White'
}
data['Ethnicity'] = data['Ethnicity'].map(ethnicity_mapping)

cl_mapping = {
      'CL0': 0.0, # 'never used the drug'
      'CL1': 1.0, # 'used it over a decade ago'
      'CL2': 2.0, # 'in the last decade'
      'CL3': 3.0, # 'used in the last year'
      'CL4': 4.0, # 'used in the last month'
      'CL5': 5.0, # 'used in the last week'
      'CL6': 6.0  # 'used in the last day'
}

ordinal_features = [
    'Alcohol', 'Amyl', 'Amphet', 'Benzos', 'Cannabis', 'Coke',
    'Crack', 'Ecstasy', 'Heroin', 'Ketamine', 'Legalh', 'LSD',
    'Meth', 'Mushrooms', 'Nicotine','VSA'
]

for feature in ordinal_features:
    data[feature] = data[feature].map(cl_mapping)

"""

```
# This is formatted as code
```

SUMMARY CATEGORIES:

Age:
0 = 18-24
1 = 25-34
2 = 35-44
3 = 45-54
4 = 55-64
5 = 65+
Gender:
0 = F
1 = M
Education:
0 = Left school before 16 years
1 = Left school at 16 years
2 = Left school at 17 years
3 = Left school at 18 years
4 = Some college or university, no certificate or degree
5 = Professional certificate/ diploma
6 = University degree
7 = Masters degree
8 = Doctorate degree
Country:
0 = Australia
1 = Canada
2 = New Zealand
3 = Other
4 = Republic of Ireland
5 = UK
6 = USA
Ethincity:
0 = Asian
1 = Black
2 = Mixed-Black/Asian
3 = Mixed-White/Asian
4 = Mixed-White/Black
5 = Other
6 = White
Drug Use:
0 = never used the drug
1 = used it over a decade ago
2 = in the last decade
3 = used in the last year
4 = used in the last month
5 = used in the last week
6 = used in the last day"""

data.head(1)

data.describe()

# Save DataFrame to CSV file
output_file = '/content/drug_consumption_cleaned_.csv'
data.to_csv(output_file, index=False)  #

"""### **Exploratory Data Analysis (EDA)**

Average Drug Use
"""

# List of drug use columns
drug_use_columns = [
    'Alcohol', 'Amyl', 'Amphet', 'Benzos', 'Cannabis', 'Coke',
    'Crack', 'Ecstasy', 'Heroin', 'Ketamine', 'Legalh', 'LSD',
    'Meth', 'Mushrooms', 'Nicotine', 'VSA'
]

# Calculate the average use
average_drug_use = data[drug_use_columns].mean()

# Sort from max to min
sorted_average_drug_use = average_drug_use.sort_values(ascending=False)

# Plotting
plt.figure(figsize=(14, 6))
sns.barplot(x=average_drug_use.index, y=sorted_average_drug_use.values)

# Add labels and title for clarity
plt.xticks(rotation=45)
plt.ylabel('Average Consumption Score')
plt.xlabel('Drug Type')
plt.title('Average Drug Use')

# Show the plot
plt.show()

"""Correlation matrix respect Drug use"""

drugs_df = data[['Age', 'Gender', 'Education', 'Country', 'Ethnicity', 'Nscore',
                   'Escore','Oscore', 'Ascore','Cscore','Impulsive','SS','Alcohol','Amphet','Amyl','Benzos',
                   'Cannabis','Coke','Crack', 'Ecstasy','Heroin','Ketamine', 'Legalh', 'LSD' , 'Meth', 'Mushrooms', 'Nicotine','VSA']]
drugs_df.head()

# correlation matrix
correlation_matrix = drugs_df.corr()

# Plotting the heatmap
plt.figure(figsize=(18, 10))
sns.heatmap(correlation_matrix, annot=True, fmt=".2f", cmap='viridis')

# Setting the title
plt.title('Correlation Matrix for Selected Drug and Personality Features')

# Display the heatmap
plt.show()

"""Analysis : the following columns show insignificant correlation with the drug consume: Age, Gender, Education, Education, Country and Ethnicity.

For this reason we are going to drop as part of prediction.

---
Personality Scores (Nscore, Escore, Oscore, Ascore, Cscore): Some of these show moderate correlations with drug use, particularly Oscore (openness) with Cannabis (0.412653) and LSD (0.368631), which could suggest that more open individuals report higher use of these substances.

---
Impulsive and SS (Sensation Seeking): These show moderate to strong correlations with most drugs, indicating that individuals with higher impulsivity and sensation seeking tend to report higher drug use.

---

Cannabis use is highly correlated with use of other substances like Mushrooms (0.579964) and LSD (0.520027).
Cocaine use is strongly correlated with Ecstasy (0.611472) and Heroin (0.423325).
Heroin use also has a strong correlation with Crack (0.524627) and Meth (0.478898).

Evaluation of risk to be drug consumer for each drug.

---
What is the criteria from that?


---

The Five Factor Model of personality and evaluation of drug consumption risk
E. Fehrman, A.K. Muhammad, E.M. Mirkes, V. Egan, A.N. Gorban
The problem of evaluating an individual's risk of drug consumption and misuse is highly important. An online survey methodology was employed to collect data including Big Five personality traits (NEO-FFI-R), impulsivity (BIS-11), sensation seeking (ImpSS), and demographic information. The data set contained information on the consumption of 18 central nervous system psychoactive drugs. Correlation analysis demonstrated the existence of groups of drugs with strongly correlated consumption patterns. Three correlation pleiades were identified, named by the central drug in the pleiade: ecstasy, heroin, and benzodiazepines pleiades. An exhaustive search was performed to select the most effective subset of input features and data mining methods to classify users and non-users for each drug and pleiad. A number of classification methods were employed (decision tree, random forest, k-nearest neighbors, linear discriminant analysis, Gaussian mixture, probability density function estimation, logistic regression and na{Ã¯}ve Bayes) and the most effective classifier was selected for each drug. The quality of classification was surprisingly high with sensitivity and specificity (evaluated by leave-one-out cross-validation) being greater than 70\% for almost all classification tasks. The best results with sensitivity and specificity being greater than 75\% were achieved for cannabis, crack, ecstasy, legal highs, LSD, and volatile substance abuse (VSA).
"""

